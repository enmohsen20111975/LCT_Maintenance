version: '3.8'

services:
  sts-app:
    build: .
    ports:
      - "5000:5000"
    volumes:
      - ./instance:/app/instance
      - ./uploads:/app/uploads
      - ./logs:/app/logs
      - ./backups:/app/backups
    environment:
      - SECRET_KEY=${SECRET_KEY:-your-production-secret-key-change-this}
      - FLASK_ENV=production
      - FLASK_DEBUG=False
      - DATABASE_URL=sqlite:///instance/production.db
      - UPLOAD_FOLDER=uploads
      - MAX_CONTENT_LENGTH=536870912
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
      - ./uploads:/var/www/uploads:ro
      - ./static:/var/www/static:ro
    depends_on:
      - sts-app
    restart: unless-stopped

  # Optional: Add a database backup service
  backup:
    image: alpine:latest
    volumes:
      - ./instance:/data/instance
      - ./backups:/data/backups
      - ./backup_script.sh:/backup.sh:ro
    command: |
      sh -c '
        apk add --no-cache dcron
        echo "0 2 * * * /backup.sh" | crontab -
        crond -f
      '
    restart: unless-stopped
